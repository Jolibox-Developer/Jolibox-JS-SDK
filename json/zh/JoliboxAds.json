{
    "JoliboxAds": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "Jolibox Ads SDK"
                }
            ]
        },
        "properties": {},
        "methods": {
            "adConfig": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "adConfig() 调用将游戏的当前配置传达给广告位 API。广告位 API 可以使用这些信息来调整广告预加载的方式，并过滤其请求的广告类型，以确保其适合（例如需要声音的视频广告）。"
                        }
                    ]
                }
            },
            "adBreak": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "adBreak() 是在游戏中放置广告的关键函数。它定义了一个广告位，并接收一个名为 placement config 的对象，该对象指定了展示广告所需的所有内容。\n\nadBreak() 函数定义了一个广告可以展示的广告位。是否实际展示广告取决于以下因素：\n\n- 你声明的广告位类型\n  - 这个广告是在游戏开始时？关卡之间？还是在玩家暂停游戏时？\n- 当前玩家是否有合适的广告\n  - 这个广告对他们是否相关？\n  - 它是否与他们的数据隐私和同意设置一致？\n- 玩家最近看到的广告数量\n- 控制设置——例如你为这个游戏配置的广告频率\n  - 可以在标签中作为提示，或者，\n  - 在 AdSense 中设置——请注意，AdSense 中可用的控件会随着时间演变。\n\n显示的广告类型也取决于类似的因素。\n\n请注意，调用 adBreak() 时可能不会显示任何广告。它只是声明了一个可以展示广告的位置。\n\n这与传统的 API 不同，你的代码通常会知道广告是否可用，并在游戏中决定是否展示。这种让广告位 API 决定是否在某个位置展示广告的方式有时被称为“控制反转”。\n\n我们将游戏 API 过渡到这种模式的原因有三点。首先，它减少了你需要在游戏中编写的代码。其次，它使得更容易提供符合政策的广告位并确保出色的用户体验，从而帮助我们为游戏发布者提供了最高性能的格式。最后，它更清晰地将广告放置与广告的类型和数量的决策分离开来。\n\n我们希望你能够更改广告货币化设置和控制用户体验，而无需编辑并发布游戏的新版本，最初可以通过在标签中指定提示来实现。但在未来版本中，我们将能够直接在 AdSense 和 AdMob 前端提供这些控件。"
                        }
                    ]
                }
            },
            "adUnit": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": []
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "adUnit() 是一个创建广告单元并将其附加到父元素的函数。广告单元是一个可以用来展示广告的单一广告位。\n\n目前我们仅支持创建 "
                        },
                        {
                            "kind": "code",
                            "text": "`<ins>`"
                        },
                        {
                            "kind": "text",
                            "text": " 标签，类名为 'adsbygoogle'。这是使用 Google AdSense 创建广告单元的标准方式。\n\n调用此方法后，广告单元将附加到你在参数对象中指定的父元素 el 上。\n\n默认情况下，客户端 ID 和频道 ID 由 SDK 自动设置，广告位名称设置为广告单元的位置。你可以通过在参数对象中传递 slot 和 channelId 来覆盖这些值。"
                        }
                    ]
                }
            }
        },
        "accessors": {}
    }
}